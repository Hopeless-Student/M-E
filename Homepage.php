<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Guza - Shop</title>
    <link rel="stylesheet" href="Homepage.css">
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="container">
            <nav class="nav">
                <div class="logo">Guza</div>
                <ul class="nav-links">
                    <li><a href="#" class="nav-link">Home</a></li>
                    <li><a href="#" class="nav-link active">Shop</a></li>
                    <li><a href="#" class="nav-link">Products</a></li>
                    <li><a href="#" class="nav-link">Pages</a></li>
                    <li><a href="#" class="nav-link">Blog</a></li>
                    <li><a href="#" class="nav-link">Elements</a></li>
                </ul>
                <div class="nav-icons">
                    <button class="icon-btn search-btn" onclick="openSearch()">üîç</button>
                    <button class="icon-btn" onclick="openLogin()">üë§</button>
                    <button class="icon-btn">ü§ç</button>
                    <button class="icon-btn cart-btn" onclick="toggleCart()">
                        üõçÔ∏è
                        <span class="cart-badge" id="cart-count">3</span>
                    </button>
                </div>
            </nav>
        </div>
    </header>

    <!-- Hero Section -->
    <section class="hero">
        <div class="hero-content">
            <h1 class="hero-title">Shop</h1>
            <nav class="breadcrumb">
                <span>Home</span> > <span>Shop</span>
            </nav>
        </div>
    </section>

    <!-- Main Content -->
    <main class="main">
        <div class="container">
            <!-- Filters & Sorting -->
            <div class="filters-bar">
                <div class="filters">
                    <span class="filter-label">Filter by:</span>
                    <div class="filter-group">
                        <select class="filter-dropdown">
                            <option>Categories</option>
                            <option>Shirts</option>
                            <option>Jackets</option>
                            <option>Coats</option>
                        </select>
                        <div class="color-filter">
                            <button class="color-btn active" data-color="all">All</button>
                            <button class="color-btn blue" data-color="blue"></button>
                            <button class="color-btn grey" data-color="grey"></button>
                            <button class="color-btn red" data-color="red"></button>
                            <button class="color-btn yellow" data-color="yellow"></button>
                        </div>
                        <select class="filter-dropdown">
                            <option>Size</option>
                            <option>S</option>
                            <option>M</option>
                            <option>L</option>
                            <option>XL</option>
                        </select>
                        <select class="filter-dropdown">
                            <option>Brand</option>
                            <option>Brand A</option>
                            <option>Brand B</option>
                        </select>
                        <select class="filter-dropdown">
                            <option>Price</option>
                            <option>$0 - $50</option>
                            <option>$50 - $100</option>
                        </select>
                    </div>
                </div>
                <div class="sorting">
                    <select class="sort-dropdown">
                        <option>Default Sorting</option>
                        <option>Price: Low to High</option>
                        <option>Price: High to Low</option>
                        <option>Newest</option>
                        <option>Popularity</option>
                    </select>
                    <div class="view-toggle">
                        <button class="view-btn active">‚äû</button>
                        <button class="view-btn">‚ò∞</button>
                    </div>
                </div>
            </div>

            <!-- Products Grid -->
            <div class="products-grid" id="products-grid">
                <!-- Product cards will be generated by JavaScript -->
            </div>

            <!-- Pagination -->
            <div class="pagination">
                <button class="page-btn active">1</button>
                <button class="page-btn">2</button>
                <button class="page-btn">3</button>
                <button class="page-btn">4</button>
                <button class="page-btn">‚Üí</button>
            </div>
        </div>
    </main>

    <!-- Newsletter Section -->
    <section class="newsletter">
        <div class="container">
            <div class="newsletter-content">
                <h3>Receive an exclusive <span class="highlight">20%</span> discount when you sign up.</h3>
                <div class="newsletter-form">
                    <input type="email" placeholder="Enter your email" class="email-input">
                    <button class="subscribe-btn">Subscribe</button>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="footer">
        <div class="container">
            <div class="footer-content">
                <div class="footer-section">
                    <h4>Company</h4>
                    <ul>
                        <li><a href="#">About Us</a></li>
                        <li><a href="#">Blog</a></li>
                        <li><a href="#">Careers</a></li>
                        <li><a href="#">Locations</a></li>
                    </ul>
                </div>
                <div class="footer-section">
                    <h4>Customer Care</h4>
                    <ul>
                        <li><a href="#">Size Guide</a></li>
                        <li><a href="#">Help & FAQs</a></li>
                        <li><a href="#">Return My Order</a></li>
                        <li><a href="#">Refer a Friend</a></li>
                    </ul>
                </div>
                <div class="footer-section">
                    <h4>Terms & Policies</h4>
                    <ul>
                        <li><a href="#">Duties & Taxes</a></li>
                        <li><a href="#">Shipping Info</a></li>
                        <li><a href="#">Privacy Policy</a></li>
                        <li><a href="#">Terms Conditions</a></li>
                    </ul>
                </div>
                <div class="footer-section">
                    <h4>Follow us</h4>
                    <ul>
                        <li><a href="#">Instagram</a></li>
                        <li><a href="#">Facebook</a></li>
                        <li><a href="#">Pinterest</a></li>
                        <li><a href="#">TikTok</a></li>
                    </ul>
                </div>
            </div>
            <div class="footer-bottom">
                <div class="footer-logo">Guza</div>
                <div class="footer-info">¬© 2022 July. All rights reserved</div>
                <div class="payment-methods">
                    <span>üí≥</span>
                    <span>üí≥</span>
                    <span>üí≥</span>
                    <span>üí≥</span>
                </div>
                <div class="language-currency">
                    <select>
                        <option>EN</option>
                        <option>ES</option>
                    </select>
                    <select>
                        <option>USD</option>
                        <option>EUR</option>
                    </select>
                </div>
            </div>
        </div>
    </footer>

    <!-- Cart Sidebar -->
    <div class="cart-sidebar" id="cart-sidebar">
        <div class="cart-header">
            <h3>Shopping Cart</h3>
            <button class="close-btn" onclick="toggleCart()">‚úï</button>
        </div>
        <div class="cart-items" id="cart-items">
            <!-- Cart items will be generated by JavaScript -->
        </div>
        <div class="cart-footer">
            <div class="cart-total">
                <span>Subtotal: $<span id="cart-total">48.00</span></span>
            </div>
            <button class="checkout-btn">Checkout</button>
        </div>
    </div>

    <!-- Overlay -->
    <div class="overlay" id="overlay" onclick="closeModals()"></div>

    <!-- Search Modal -->
    <div class="search-modal" id="search-modal">
        <div class="search-content">
            <input type="text" placeholder="Search products..." class="search-input">
            <button class="close-btn" onclick="closeSearch()">‚úï</button>
        </div>
    </div>

    <!-- Login Modal -->
    <div class="login-modal" id="login-modal">
        <div class="modal-content">
            <h3>Login</h3>
            <form class="login-form">
                <input type="email" placeholder="Email" required>
                <input type="password" placeholder="Password" required>
                <label class="remember">
                    <input type="checkbox"> Remember Me
                </label>
                <button type="submit">Login</button>
                <div class="social-login">
                    <button type="button" class="social-btn">Login with Google</button>
                    <button type="button" class="social-btn">Login with Facebook</button>
                </div>
            </form>
            <button class="close-btn" onclick="closeLogin()">‚úï</button>
        </div>
    </div>

    <script>
    // Product data
const products = [
    {
        id: 1,
        title: "Lace Shirt Cut II",
        price: 16.00,
        image: "üëï",
        colors: ["blue", "grey", "red"],
        category: "shirts"
    },
    {
        id: 2,
        title: "Lace Shirt Cut II",
        price: 16.00,
        image: "üß•",
        colors: ["pink", "grey", "red"],
        category: "jackets"
    },
    {
        id: 3,
        title: "Lace Shirt Cut II",
        price: 16.00,
        image: "üß•",
        colors: ["black", "grey"],
        category: "jackets"
    },
    {
        id: 4,
        title: "Lace Shirt Cut II",
        price: 16.00,
        image: "üëî",
        colors: ["blue", "grey"],
        category: "shirts"
    },
    {
        id: 5,
        title: "Lace Shirt Cut II",
        price: 16.00,
        image: "üß•",
        colors: ["multicolor", "grey", "red"],
        category: "jackets"
    },
    {
        id: 6,
        title: "Lace Shirt Cut II",
        price: 16.00,
        image: "üß•",
        colors: ["brown", "grey"],
        category: "coats"
    },
    {
        id: 7,
        title: "Lace Shirt Cut II",
        price: 16.00,
        image: "üëî",
        colors: ["plaid", "grey"],
        category: "shirts"
    },
    {
        id: 8,
        title: "Lace Shirt Cut II",
        price: 16.00,
        image: "üß•",
        colors: ["beige", "grey"],
        category: "coats"
    },
    {
        id: 9,
        title: "Lace Shirt Cut II",
        price: 16.00,
        image: "üëï",
        colors: ["beige", "grey"],
        category: "shirts"
    },
    {
        id: 10,
        title: "Lace Shirt Cut II",
        price: 16.00,
        image: "üß•",
        colors: ["pink", "grey"],
        category: "jackets"
    },
    {
        id: 11,
        title: "Lace Shirt Cut II",
        price: 16.00,
        image: "ü©≥",
        colors: ["yellow", "grey"],
        category: "shorts"
    },
    {
        id: 12,
        title: "Lace Shirt Cut II",
        price: 16.00,
        image: "üß•",
        colors: ["grey"],
        category: "blazers"
    }
];

// Cart data
let cart = [
    { id: 1, title: "Lace Shirt Cut II", price: 16.00, quantity: 2, image: "üëï" },
    { id: 2, title: "Lace Shirt Cut II", price: 16.00, quantity: 1, image: "üß•" }
];

// Current filter state
let currentFilter = {
    color: 'all',
    category: 'all',
    size: 'all',
    brand: 'all',
    price: 'all'
};

// DOM Elements
const productsGrid = document.getElementById('products-grid');
const cartSidebar = document.getElementById('cart-sidebar');
const overlay = document.getElementById('overlay');
const searchModal = document.getElementById('search-modal');
const loginModal = document.getElementById('login-modal');
const cartCount = document.getElementById('cart-count');
const cartItems = document.getElementById('cart-items');
const cartTotal = document.getElementById('cart-total');

// Initialize the page
document.addEventListener('DOMContentLoaded', function() {
    renderProducts(products);
    renderCartItems();
    updateCartCount();
    setupEventListeners();
});

// Render products
function renderProducts(productsToRender) {
    productsGrid.innerHTML = '';

    productsToRender.forEach(product => {
        const productCard = createProductCard(product);
        productsGrid.appendChild(productCard);
    });
}

// Create product card
function createProductCard(product) {
    const card = document.createElement('div');
    card.className = 'product-card';

    const colorSwatches = product.colors.map(color =>
        `<div class="color-swatch" style="background-color: ${getColorValue(color)}" title="${color}"></div>`
    ).join('');

    card.innerHTML = `
        <div class="product-image">
            <span style="font-size: 4rem;">${product.image}</span>
            <div class="product-actions">
                <button class="action-btn" onclick="toggleWishlist(${product.id})" title="Add to Wishlist">
                    ü§ç
                </button>
                <button class="action-btn" onclick="quickView(${product.id})" title="Quick View">
                    üëÅÔ∏è
                </button>
            </div>
            <button class="quick-view" onclick="quickView(${product.id})">
                Quick View
            </button>
        </div>
        <div class="product-info">
            <h3 class="product-title">${product.title}</h3>
            <div class="product-price">$${product.price.toFixed(2)}</div>
            <div class="color-swatches">
                ${colorSwatches}
            </div>
        </div>
    `;

    return card;
}

// Get color value for swatch
function getColorValue(colorName) {
    const colorMap = {
        blue: '#3498db',
        grey: '#95a5a6',
        red: '#e74c3c',
        yellow: '#f1c40f',
        pink: '#ff69b4',
        black: '#2c3e50',
        brown: '#8b4513',
        beige: '#f5deb3',
        multicolor: 'linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1)',
        plaid: 'repeating-linear-gradient(45deg, #8b4513, #8b4513 10px, #d2b48c 10px, #d2b48c 20px)'
    };
    return colorMap[colorName] || '#bdc3c7';
}

// Setup event listeners
function setupEventListeners() {
    // Color filter buttons
    document.querySelectorAll('.color-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            document.querySelectorAll('.color-btn').forEach(b => b.classList.remove('active'));
            this.classList.add('active');
            currentFilter.color = this.dataset.color;
            filterProducts();
        });
    });

    // Filter dropdowns
    document.querySelectorAll('.filter-dropdown').forEach(dropdown => {
        dropdown.addEventListener('change', function() {
            // Handle filter changes
            filterProducts();
        });
    });

    // View toggle buttons
    document.querySelectorAll('.view-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            document.querySelectorAll('.view-btn').forEach(b => b.classList.remove('active'));
            this.classList.add('active');
            toggleGridView(this.textContent.includes('‚ò∞'));
        });
    });

    // Newsletter form
    document.querySelector('.newsletter-form').addEventListener('submit', function(e) {
        e.preventDefault();
        const email = this.querySelector('.email-input').value;
        if (email) {
            alert('Thank you for subscribing!');
            this.querySelector('.email-input').value = '';
        }
    });

    // Login form
    document.querySelector('.login-form').addEventListener('submit', function(e) {
        e.preventDefault();
        alert('Login functionality would be implemented here');
        closeLogin();
    });
}

// Filter products
function filterProducts() {
    let filteredProducts = products;

    if (currentFilter.color !== 'all') {
        filteredProducts = filteredProducts.filter(product =>
            product.colors.some(color => color === currentFilter.color)
        );
    }

    renderProducts(filteredProducts);
}

// Toggle grid view
function toggleGridView(isList) {
    const grid = document.querySelector('.products-grid');
    if (isList) {
        grid.style.gridTemplateColumns = '1fr';
    } else {
        grid.style.gridTemplateColumns = 'repeat(auto-fit, minmax(280px, 1fr))';
    }
}

// Cart functions
function toggleCart() {
    cartSidebar.classList.toggle('open');
    overlay.classList.toggle('active');

    if (cartSidebar.classList.contains('open')) {
        document.body.style.overflow = 'hidden';
    } else {
        document.body.style.overflow = '';
    }
}

function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    if (product) {
        const existingItem = cart.find(item => item.id === productId);
        if (existingItem) {
            existingItem.quantity++;
        } else {
            cart.push({
                id: product.id,
                title: product.title,
                price: product.price,
                quantity: 1,
                image: product.image
            });
        }
        updateCartCount();
        renderCartItems();
    }
}

function removeFromCart(productId) {
    cart = cart.filter(item => item.id !== productId);
    updateCartCount();
    renderCartItems();
}

function updateQuantity(productId, change) {
    const item = cart.find(item => item.id === productId);
    if (item) {
        item.quantity += change;
        if (item.quantity <= 0) {
            removeFromCart(productId);
        } else {
            updateCartCount();
            renderCartItems();
        }
    }
}

function updateCartCount() {
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    cartCount.textContent = totalItems;
}

function renderCartItems() {
    cartItems.innerHTML = '';

    cart.forEach(item => {
        const cartItem = document.createElement('div');
        cartItem.className = 'cart-item';
        cartItem.innerHTML = `
            <div class="cart-item-image">
                <span style="font-size: 1.5rem;">${item.image}</span>
            </div>
            <div class="cart-item-info">
                <div class="cart-item-title">${item.title}</div>
                <div class="cart-item-price">$${item.price.toFixed(2)}</div>
                <div class="quantity-controls">
                    <button class="qty-btn" onclick="updateQuantity(${item.id}, -1)">-</button>
                    <span>${item.quantity}</span>
                    <button class="qty-btn" onclick="updateQuantity(${item.id}, 1)">+</button>
                    <button class="qty-btn" onclick="removeFromCart(${item.id})" style="margin-left: 10px; color: #ff4757;">√ó</button>
                </div>
            </div>
        `;
        cartItems.appendChild(cartItem);
    });

    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    cartTotal.textContent = total.toFixed(2);
}

// Modal functions
function openSearch() {
    searchModal.classList.add('active');
    overlay.classList.add('active');
    document.body.style.overflow = 'hidden';
    setTimeout(() => {
        searchModal.querySelector('.search-input').focus();
    }, 300);
}

function closeSearch() {
    searchModal.classList.remove('active');
    overlay.classList.remove('active');
    document.body.style.overflow = '';
}

function openLogin() {
    loginModal.classList.add('active');
    overlay.classList.add('active');
    document.body.style.overflow = 'hidden';
}

function closeLogin() {
    loginModal.classList.remove('active');
    overlay.classList.remove('active');
    document.body.style.overflow = '';
}

function closeModals() {
    searchModal.classList.remove('active');
    loginModal.classList.remove('active');
    cartSidebar.classList.remove('open');
    overlay.classList.remove('active');
    document.body.style.overflow = '';
}

// Product actions
function toggleWishlist(productId) {
    // In a real app, this would save to a wishlist
    alert('Added to wishlist!');
}

function quickView(productId) {
    const product = products.find(p => p.id === productId);
    if (product) {
        alert(`Quick view for ${product.title}\nPrice: $${product.price}\nColors: ${product.colors.join(', ')}`);
    }
}

// Keyboard shortcuts
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        closeModals();
    }

    if (e.ctrlKey && e.key === 'k') {
        e.preventDefault();
        openSearch();
    }
});

// Search functionality
document.querySelector('.search-input').addEventListener('input', function(e) {
    const query = e.target.value.toLowerCase();
    if (query.length > 0) {
        const filteredProducts = products.filter(product =>
            product.title.toLowerCase().includes(query) ||
            product.category.toLowerCase().includes(query)
        );
        // In a real app, you would show search suggestions here
        console.log('Search results:', filteredProducts);
    }
});

// Smooth scroll for pagination
document.querySelectorAll('.page-btn').forEach(btn => {
    btn.addEventListener('click', function() {
        document.querySelectorAll('.page-btn').forEach(b => b.classList.remove('active'));
        this.classList.add('active');

        // Scroll to top of products
        document.querySelector('.products-grid').scrollIntoView({
            behavior: 'smooth'
        });
    });
});

// Animation on scroll
const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
};

const observer = new IntersectionObserver(function(entries) {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
        }
    });
}, observerOptions);

// Observe product cards for animation
setTimeout(() => {
    document.querySelectorAll('.product-card').forEach(card => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';
        card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(card);
    });
}, 100);</script>
</body>
</html>
